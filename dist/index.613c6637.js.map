{"mappings":"ACAA,IAAM,EAAO,SAAS,UAAU,CAAC,SAAS,cAAc,CAAC,SASzD,QAAQ,GAAG,CALK,MAAM,aAAa,CAC/B,KACA,CAAE,GAAI,UAAW,IAAK,KAAM,EAC5B,qBAgDJ,IAAM,EAAS,MAAM,aAAa,CAAC,MAAO,CAAE,GAAI,QAAS,EACrD,CAAC,MAAM,aAAa,CAAC,MAAO,CAAE,GAAI,QAAS,EACvC,CAAC,MAAM,aAAa,CAAC,KAAM,CAAC,EAAG,qBAAsB,MAAM,aAAa,CAAC,KAAM,CAAC,EAAG,qBAAqB,EAC5G,MAAM,aAAa,CAAC,MAAO,CAAE,GAAI,QAAS,EACtC,CAAC,MAAM,aAAa,CAAC,KAAM,CAAC,EAAG,qBAAsB,MAAM,aAAa,CAAC,KAAM,CAAC,EAAG,qBAAqB,EAAE,EAGlH,EAAK,MAAM,CAAC","sources":["<anon>","index.js"],"sourcesContent":["var root = ReactDOM.createRoot(document.getElementById(\"root\")); // ReactDOM has to create a element and added to the dom.\nvar heading = React.createElement(\"h1\", {\n    id: \"heading\",\n    xyz: \"abc\"\n}, \"Hello React !!!!\" // this is also in props object as a children.\n);\nconsole.log(heading); //object\nvar parent = React.createElement(\"div\", {\n    id: \"parent\"\n}, [\n    React.createElement(\"div\", {\n        id: \"child1\"\n    }, [\n        React.createElement(\"h1\", {}, \"this is heading 1\"),\n        React.createElement(\"h2\", {}, \"this is heading 2\")\n    ]),\n    React.createElement(\"div\", {\n        id: \"child2\"\n    }, [\n        React.createElement(\"h1\", {}, \"this is heading 1\"),\n        React.createElement(\"h2\", {}, \"this is heading 2\")\n    ])\n]) // Use array, if we have more then once child\n;\nroot.render(parent);\n\n//# sourceMappingURL=index.613c6637.js.map\n","const root = ReactDOM.createRoot(document.getElementById(\"root\")); // ReactDOM has to create a element and added to the dom.\n\n\n{/* <h1>Hello React</h1> */ }\nconst heading = React.createElement(\n    \"h1\",\n    { id: \"heading\", xyz: \"abc\" }, // this is props object\n    \"Hello React !!!!\" // this is also in props object as a children.\n);\nconsole.log(heading); //object\n// root.render(heading); \n// ------------------\n\n\n// If we want to create h1 inside div, basically nested html\n{/* <div>\n    <h1>this is heading</h1>\n</div> */}\n\n// const parent = React.createElement('div', {}, React.createElement('h1', {}, 'this is heading'))\n\n// root.render(parent);\n// --------------------\n\n\n// Lets build something like , if we have one or more children like html structure\n{/* <div id='parent'>\n    <div id='child'>\n        <h1>this is heading 1</h1>\n        <h2>this is heading 2</h2>\n    </div>\n</div> */}\n\n// const parent = React.createElement('div', { id: 'parent' },\n//     React.createElement('div', { id: 'child' },\n//         [React.createElement('h1', {}, 'this is heading 1'), React.createElement('h2', {}, 'this is heading 2')])) // Use array, if we have more then once child\n\n\n// root.render(parent)\n// ---------------\n\n\n// If we have more complex html structured like below:\n{/* <div id='parent'>\n    <div id='child1'>\n        <h1>this is heading 1</h1>\n        <h2>this is heading 2</h2>\n    </div>\n    <div id='child2'>\n        <h1>this is heading 1</h1>\n        <h2>this is heading 2</h2>\n    </div>\n</div>  */}\n\n\nconst parent = React.createElement('div', { id: 'parent' },\n    [React.createElement('div', { id: 'child1' },\n        [React.createElement('h1', {}, 'this is heading 1'), React.createElement('h2', {}, 'this is heading 2')]),\n    React.createElement('div', { id: 'child2' },\n        [React.createElement('h1', {}, 'this is heading 1'), React.createElement('h2', {}, 'this is heading 2')])]) // Use array, if we have more then once child\n\n\nroot.render(parent)"],"names":["root","ReactDOM","createRoot","document","getElementById","console","log","React","createElement","id","xyz","parent","render"],"version":3,"file":"index.613c6637.js.map"}